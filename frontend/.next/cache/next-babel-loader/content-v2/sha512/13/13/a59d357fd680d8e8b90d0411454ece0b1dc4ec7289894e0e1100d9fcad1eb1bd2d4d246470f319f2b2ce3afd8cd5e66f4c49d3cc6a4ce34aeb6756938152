{"ast":null,"code":"import _regeneratorRuntime from \"/home/dasein/dev/explore_new/django-nextjs-realtime/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/dasein/dev/explore_new/django-nextjs-realtime/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { setCookie } from \"./cookie\";\nimport { apiBaseUrl } from \"../config/environment\";\n\nvar setLoginCookies = function setLoginCookies(accessToken, refreshToken, user) {\n  setCookie(\"access_token\", accessToken, addMinutes(new Date(), 1440)); //1 day\n\n  setCookie(\"refresh_token\", refreshToken, addDays(new Date(), 1)); //14 Days\n\n  setCookie(\"username\", user.username, addMinutes(new Date(), 1440));\n  setCookie(\"email\", user.email, addMinutes(new Date(), 1440));\n  setCookie(\"uuid\", user.id, addMinutes(new Date(), 1440));\n};\n/**\n * Login with username and password\n * @param {string} username - User's username\n * @param {string} password - User's password\n */\n\n\nexport var loginWithUsername = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(username, password) {\n    var myHeaders, urlencoded, requestOptions;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n            urlencoded = new URLSearchParams();\n            urlencoded.append(\"username\", username);\n            urlencoded.append(\"password\", password);\n            requestOptions = {\n              method: \"POST\",\n              headers: myHeaders,\n              body: urlencoded\n            };\n            return _context.abrupt(\"return\", fetch(\"\".concat(apiBaseUrl.url, \"/rest-auth/login/\"), requestOptions).then(function (response) {\n              if (response.status === 200) {\n                return response.json();\n              } else {\n                throw response;\n              }\n            }).then(function (result) {\n              setLoginCookies(result.access_token, result.refresh_token, result.user);\n              return result;\n            })[\"catch\"](function (error) {\n              return error.json();\n            }).then(function (result) {\n              return result;\n            }));\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function loginWithUsername(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n/**\n * Register directly w/ sign up form\n * @param {UserModel} userData - User's registration information\n */\n\nexport var signUpApiCall = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(userData) {\n    var myHeaders, urlencoded, requestOptions;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n            urlencoded = new URLSearchParams();\n            Object.keys(userData).forEach(function (key) {\n              urlencoded.append(key, userData[key]);\n            });\n            requestOptions = {\n              method: \"POST\",\n              headers: myHeaders,\n              body: urlencoded\n            };\n            return _context2.abrupt(\"return\", fetch(\"\".concat(apiBaseUrl.url, \"/rest-auth/registration/\"), requestOptions).then(function (response) {\n              if (response.status === 201) {\n                return response.json();\n              } else {\n                throw response;\n              }\n            }).then(function (result) {\n              setLoginCookies(result.access_token, result.refresh_token, result.user);\n              return result;\n            })[\"catch\"](function (error) {\n              return error.json();\n            }).then(function (result) {\n              return result;\n            }));\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function signUpApiCall(_x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar addMinutes = function addMinutes(dt, minutes) {\n  return new Date(dt.getTime() + minutes * 60000);\n};\n\nvar addDays = function addDays(dt, days) {\n  return new Date(dt.getTime() + days * 86400000);\n};\n\nexport var refreshToken = function refreshToken() {};\nexport function signOut() {\n  setCookie(\"access_token\", null, addMinutes(new Date(), -1440));\n  setCookie(\"refresh_token\", null, addDays(new Date(), -14));\n  setCookie(\"username\", null);\n  setCookie(\"email\", null);\n  setCookie(\"uuid\", null);\n}\nexport var refreshTokenToAccessToken = function refreshTokenToAccessToken(refresh_token) {\n  if (refresh_token === null) {\n    return null;\n  }\n\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n  var urlencoded = new URLSearchParams();\n  urlencoded.append(\"refresh\", refresh_token);\n  var requestOptions = {\n    method: \"POST\",\n    headers: myHeaders,\n    body: urlencoded\n  };\n  return fetch(\"\".concat(apiBaseUrl.url, \"/api/token/refresh/\"), requestOptions).then(function (response) {\n    if (response.status === 200) {\n      return response.json();\n    } else {\n      throw response;\n    }\n  }).then(function (result) {\n    setCookie(\"access_token\", result.access, addMinutes(new Date(), 1440)); //1 day\n\n    return result;\n  })[\"catch\"](function (error) {\n    return {\n      error: error.json()\n    };\n  }).then(function (result) {\n    return result;\n  });\n};","map":{"version":3,"sources":["/home/dasein/dev/explore_new/django-nextjs-realtime/frontend/service/auth.ts"],"names":["setCookie","apiBaseUrl","setLoginCookies","accessToken","refreshToken","user","addMinutes","Date","addDays","username","email","id","loginWithUsername","password","myHeaders","Headers","append","urlencoded","URLSearchParams","requestOptions","method","headers","body","fetch","url","then","response","status","json","result","access_token","refresh_token","error","signUpApiCall","userData","Object","keys","forEach","key","dt","minutes","getTime","days","signOut","refreshTokenToAccessToken","access"],"mappings":"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","sourcesContent":["import { setCookie, getCookie } from \"./cookie\";\nimport { apiBaseUrl } from \"../config/environment\";\nimport { RegisterUser, UserModel } from \"../models/types\";\n\nconst setLoginCookies = (\n  accessToken: string,\n  refreshToken: string,\n  user: UserModel\n) => {\n  setCookie(\"access_token\", accessToken, addMinutes(new Date(), 1440)); //1 day\n  setCookie(\"refresh_token\", refreshToken, addDays(new Date(), 1)); //14 Days\n  setCookie(\"username\", user.username, addMinutes(new Date(), 1440));\n  setCookie(\"email\", user.email, addMinutes(new Date(), 1440));\n  setCookie(\"uuid\", user.id, addMinutes(new Date(), 1440));\n};\n\n/**\n * Login with username and password\n * @param {string} username - User's username\n * @param {string} password - User's password\n */\nexport const loginWithUsername = async (username: string, password: string) => {\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n  var urlencoded = new URLSearchParams();\n  urlencoded.append(\"username\", username);\n  urlencoded.append(\"password\", password);\n  const requestOptions = {\n    method: \"POST\",\n    headers: myHeaders,\n    body: urlencoded,\n  };\n  return fetch(`${apiBaseUrl.url}/rest-auth/login/`, requestOptions)\n    .then((response) => {\n      if (response.status === 200) {\n        return response.json();\n      } else {\n        throw response;\n      }\n    })\n    .then((result) => {\n      setLoginCookies(result.access_token, result.refresh_token, result.user);\n      return result;\n    })\n    .catch((error) => {\n      return error.json();\n    })\n    .then((result) => {\n      return result;\n    });\n};\n\n/**\n * Register directly w/ sign up form\n * @param {UserModel} userData - User's registration information\n */\nexport const signUpApiCall = async (userData: RegisterUser) => {\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n  var urlencoded = new URLSearchParams();\n\n  Object.keys(userData).forEach((key) => {\n    urlencoded.append(key, userData[key]);\n  });\n\n  const requestOptions = {\n    method: \"POST\",\n    headers: myHeaders,\n    body: urlencoded,\n  };\n  return fetch(`${apiBaseUrl.url}/rest-auth/registration/`, requestOptions)\n    .then((response) => {\n      if (response.status === 201) {\n        return response.json();\n      } else {\n        throw response;\n      }\n    })\n    .then((result) => {\n      setLoginCookies(result.access_token, result.refresh_token, result.user);\n      return result;\n    })\n    .catch((error) => {\n      return error.json();\n    })\n    .then((result) => {\n      return result;\n    });\n};\n\nconst addMinutes = (dt: Date, minutes: number) => {\n  return new Date(dt.getTime() + minutes * 60000);\n};\n\nconst addDays = (dt: Date, days: number) => {\n  return new Date(dt.getTime() + days * 86400000);\n};\n\nexport const refreshToken = () => {};\n\nexport function signOut() {\n  setCookie(\"access_token\", null, addMinutes(new Date(), -1440));\n  setCookie(\"refresh_token\", null, addDays(new Date(), -14));\n  setCookie(\"username\", null);\n  setCookie(\"email\", null);\n  setCookie(\"uuid\", null);\n}\n\nexport const refreshTokenToAccessToken = (refresh_token: string) => {\n  if (refresh_token === null) {\n    return null;\n  }\n\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n  var urlencoded = new URLSearchParams();\n  urlencoded.append(\"refresh\", refresh_token);\n  const requestOptions = {\n    method: \"POST\",\n    headers: myHeaders,\n    body: urlencoded,\n  };\n  return fetch(`${apiBaseUrl.url}/api/token/refresh/`, requestOptions)\n    .then((response) => {\n      if (response.status === 200) {\n        return response.json();\n      } else {\n        throw response;\n      }\n    })\n    .then((result) => {\n      setCookie(\"access_token\", result.access, addMinutes(new Date(), 1440)); //1 day\n      return result;\n    })\n    .catch((error) => {\n      return { error: error.json() };\n    })\n    .then((result) => {\n      return result;\n    });\n};\n"]},"metadata":{},"sourceType":"module"}