{"ast":null,"code":"import _regeneratorRuntime from \"/home/dasein/dev/explore_new/django-nextjs-realtime/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/dasein/dev/explore_new/django-nextjs-realtime/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { apiBaseUrl } from \"../config/environment\";\nimport { getCookie } from \"./cookie\";\nexport var apiCall = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var method, url, body, headers, url_, myHeaders, access_token, _iterator, _step, pair, requestOptions;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            method = _ref.method, url = _ref.url, body = _ref.body, headers = _ref.headers;\n            url_ = \"\".concat(apiBaseUrl.url).concat(url);\n            myHeaders = new Headers();\n            access_token = getCookie(\"access_token\");\n            myHeaders.append(\"Authorization\", \"Bearer \" + access_token);\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            _iterator = _createForOfIteratorHelper(body.entries());\n\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                pair = _step.value;\n                console.log(pair[0] + \", \" + pair[1]);\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n\n            requestOptions = {\n              method: method,\n              headers: myHeaders,\n              body: body\n            };\n            return _context.abrupt(\"return\", fetch(url_, requestOptions).then(function (res) {\n              if (res.status === 200 || res.status === 201) {\n                return res.json();\n              } else {\n                throw res;\n              }\n            })[\"catch\"](function (error) {\n              if (error.status === 404) {\n                return \"404\";\n              } else if (error.status === 401) {\n                console.log(error);\n                return \"401\";\n              }\n\n              return \"500\";\n            }));\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function apiCall(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/home/dasein/dev/explore_new/django-nextjs-realtime/frontend/service/common.ts"],"names":["apiBaseUrl","getCookie","apiCall","method","url","body","headers","url_","myHeaders","Headers","access_token","append","entries","pair","console","log","requestOptions","fetch","then","res","status","json","error"],"mappings":";;;;;;;;;AAAA,SAASA,UAAT,QAA2B,uBAA3B;AACA,SAASC,SAAT,QAA0B,UAA1B;AASA,OAAO,IAAMC,OAAO;AAAA,uEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,MAAT,QAASA,MAAT,EAAiBC,GAAjB,QAAiBA,GAAjB,EAAsBC,IAAtB,QAAsBA,IAAtB,EAA4BC,OAA5B,QAA4BA,OAA5B;AACfC,YAAAA,IADe,aACLP,UAAU,CAACI,GADN,SACYA,GADZ;AAEjBI,YAAAA,SAFiB,GAEL,IAAIC,OAAJ,EAFK;AAGjBC,YAAAA,YAHiB,GAGFT,SAAS,CAAC,cAAD,CAHP;AAIrBO,YAAAA,SAAS,CAACG,MAAV,CAAiB,eAAjB,EAAkC,YAAYD,YAA9C;AACAF,YAAAA,SAAS,CAACG,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AALqB,mDAOJN,IAAI,CAACO,OAAL,EAPI;;AAAA;AAOrB,kEAAiC;AAAxBC,gBAAAA,IAAwB;AAC/BC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAAC,CAAD,CAAJ,GAAU,IAAV,GAAiBA,IAAI,CAAC,CAAD,CAAjC;AACD;AAToB;AAAA;AAAA;AAAA;AAAA;;AAWfG,YAAAA,cAXe,GAWE;AACrBb,cAAAA,MAAM,EAAEA,MADa;AAErBG,cAAAA,OAAO,EAAEE,SAFY;AAGrBH,cAAAA,IAAI,EAAEA;AAHe,aAXF;AAAA,6CAgBdY,KAAK,CAACV,IAAD,EAAOS,cAAP,CAAL,CACJE,IADI,CACC,UAACC,GAAD,EAAS;AACb,kBAAIA,GAAG,CAACC,MAAJ,KAAe,GAAf,IAAsBD,GAAG,CAACC,MAAJ,KAAe,GAAzC,EAA8C;AAC5C,uBAAOD,GAAG,CAACE,IAAJ,EAAP;AACD,eAFD,MAEO;AACL,sBAAMF,GAAN;AACD;AACF,aAPI,WAQE,UAACG,KAAD,EAAW;AAChB,kBAAIA,KAAK,CAACF,MAAN,KAAiB,GAArB,EAA0B;AACxB,uBAAO,KAAP;AACD,eAFD,MAEO,IAAIE,KAAK,CAACF,MAAN,KAAiB,GAArB,EAA0B;AAC/BN,gBAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACA,uBAAO,KAAP;AACD;;AACD,qBAAO,KAAP;AACD,aAhBI,CAhBc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAPpB,OAAO;AAAA;AAAA;AAAA,GAAb","sourcesContent":["import { apiBaseUrl } from \"../config/environment\";\nimport { getCookie } from \"./cookie\";\n\nexport interface apiCallProps {\n  method: string;\n  url: string;\n  body?: any;\n  headers?: any;\n}\n\nexport const apiCall = async ({ method, url, body, headers }: apiCallProps) => {\n  const url_ = `${apiBaseUrl.url}${url}`;\n  let myHeaders = new Headers();\n  let access_token = getCookie(\"access_token\");\n  myHeaders.append(\"Authorization\", \"Bearer \" + access_token);\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  for (var pair of body.entries()) {\n    console.log(pair[0] + \", \" + pair[1]);\n  }\n\n  const requestOptions = {\n    method: method,\n    headers: myHeaders,\n    body: body,\n  };\n  return fetch(url_, requestOptions)\n    .then((res) => {\n      if (res.status === 200 || res.status === 201) {\n        return res.json();\n      } else {\n        throw res;\n      }\n    })\n    .catch((error) => {\n      if (error.status === 404) {\n        return \"404\";\n      } else if (error.status === 401) {\n        console.log(error);\n        return \"401\";\n      }\n      return \"500\";\n    });\n};\n"]},"metadata":{},"sourceType":"module"}