{"ast":null,"code":"import { refreshTokenToAccessToken } from \"./auth\";\nexport function setCookie(cname, cvalue, expireTime) {\n  if (expireTime) {\n    var expires = \"expires=\" + expireTime.toUTCString();\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n  } else {\n    document.cookie = cname + \"=\" + cvalue + \";path=/\";\n  }\n}\nexport function getCookie(cname) {\n  var name = cname + \"=\";\n  var ca = document.cookie.split(\";\");\n\n  for (var i = 0; i < ca.length; i++) {\n    var c = ca[i];\n\n    while (c.charAt(0) == \" \") {\n      c = c.substring(1);\n    }\n\n    if (c.indexOf(name) == 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n\n  if (cname === \"access_token\") {\n    // Only if access_token is null and cname is access_token\n    // console.log(\"Access token did not exist!\");\n    // console.log(\"refresh_token\", getCookie(\"refresh_token\"));\n    // if not sign-in (means no refresh token) then it will return null, else it will return access token\n    getCookie(\"refresh_token\") && refreshTokenToAccessToken(getCookie(\"refresh_token\"));\n    return null;\n  }\n\n  return null;\n}","map":{"version":3,"sources":["/home/dasein/dev/explore_new/django-nextjs-realtime/frontend/service/cookie.ts"],"names":["refreshTokenToAccessToken","setCookie","cname","cvalue","expireTime","expires","toUTCString","document","cookie","getCookie","name","ca","split","i","length","c","charAt","substring","indexOf"],"mappings":"AAAA,SAASA,yBAAT,QAA0C,QAA1C;AAEA,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAA0BC,MAA1B,EAAkCC,UAAlC,EAA+C;AACpD,MAAIA,UAAJ,EAAgB;AACd,QAAIC,OAAO,GAAG,aAAaD,UAAU,CAACE,WAAX,EAA3B;AACAC,IAAAA,QAAQ,CAACC,MAAT,GAAkBN,KAAK,GAAG,GAAR,GAAcC,MAAd,GAAuB,GAAvB,GAA6BE,OAA7B,GAAuC,SAAzD;AACD,GAHD,MAGO;AACLE,IAAAA,QAAQ,CAACC,MAAT,GAAkBN,KAAK,GAAG,GAAR,GAAcC,MAAd,GAAuB,SAAzC;AACD;AACF;AAED,OAAO,SAASM,SAAT,CAAmBP,KAAnB,EAA0B;AAC/B,MAAIQ,IAAI,GAAGR,KAAK,GAAG,GAAnB;AACA,MAAIS,EAAE,GAAGJ,QAAQ,CAACC,MAAT,CAAgBI,KAAhB,CAAsB,GAAtB,CAAT;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,EAAE,CAACG,MAAvB,EAA+BD,CAAC,EAAhC,EAAoC;AAClC,QAAIE,CAAC,GAAGJ,EAAE,CAACE,CAAD,CAAV;;AACA,WAAOE,CAAC,CAACC,MAAF,CAAS,CAAT,KAAe,GAAtB,EAA2B;AACzBD,MAAAA,CAAC,GAAGA,CAAC,CAACE,SAAF,CAAY,CAAZ,CAAJ;AACD;;AACD,QAAIF,CAAC,CAACG,OAAF,CAAUR,IAAV,KAAmB,CAAvB,EAA0B;AACxB,aAAOK,CAAC,CAACE,SAAF,CAAYP,IAAI,CAACI,MAAjB,EAAyBC,CAAC,CAACD,MAA3B,CAAP;AACD;AACF;;AACD,MAAIZ,KAAK,KAAK,cAAd,EAA8B;AAC5B;AACA;AACA;AACA;AACAO,IAAAA,SAAS,CAAC,eAAD,CAAT,IACET,yBAAyB,CAACS,SAAS,CAAC,eAAD,CAAV,CAD3B;AAEA,WAAO,IAAP;AACD;;AACD,SAAO,IAAP;AACD","sourcesContent":["import { refreshTokenToAccessToken } from \"./auth\";\n\nexport function setCookie(cname, cvalue, expireTime?) {\n  if (expireTime) {\n    var expires = \"expires=\" + expireTime.toUTCString();\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n  } else {\n    document.cookie = cname + \"=\" + cvalue + \";path=/\";\n  }\n}\n\nexport function getCookie(cname) {\n  var name = cname + \"=\";\n  var ca = document.cookie.split(\";\");\n  for (var i = 0; i < ca.length; i++) {\n    var c = ca[i];\n    while (c.charAt(0) == \" \") {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) == 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  if (cname === \"access_token\") {\n    // Only if access_token is null and cname is access_token\n    // console.log(\"Access token did not exist!\");\n    // console.log(\"refresh_token\", getCookie(\"refresh_token\"));\n    // if not sign-in (means no refresh token) then it will return null, else it will return access token\n    getCookie(\"refresh_token\") &&\n      refreshTokenToAccessToken(getCookie(\"refresh_token\"));\n    return null;\n  }\n  return null;\n}\n"]},"metadata":{},"sourceType":"module"}