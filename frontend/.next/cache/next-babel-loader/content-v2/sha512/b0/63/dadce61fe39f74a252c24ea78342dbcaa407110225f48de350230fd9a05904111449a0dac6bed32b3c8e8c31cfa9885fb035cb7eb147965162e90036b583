{"ast":null,"code":"import { apiBaseUrl } from \"../config/environment\";\nimport { getCookie } from \"./cookie\";\nexport const apiCall = async ({\n  method,\n  url,\n  body,\n  headers\n}) => {\n  const url_ = `${apiBaseUrl.url}${url}`;\n  let myHeaders = new Headers();\n  let access_token = getCookie(\"access_token\");\n  myHeaders.append(\"Authorization\", \"Bearer \" + access_token);\n  const requestOptions = {\n    method: method,\n    headers: myHeaders,\n    body: body\n  };\n  return fetch(url_, requestOptions).then(res => {\n    if (res.status === 200 || res.status === 201) {\n      return res.json();\n    } else {\n      throw res;\n    }\n  }).catch(error => {\n    if (error.status === 404) {\n      return \"404\";\n    } else if (error.status === 401) {\n      console.log(error);\n      return \"401\";\n    }\n\n    return \"500\";\n  });\n};","map":{"version":3,"sources":["/home/dasein/dev/explore_new/django-nextjs-realtime/frontend/service/common.ts"],"names":["apiBaseUrl","getCookie","apiCall","method","url","body","headers","url_","myHeaders","Headers","access_token","append","requestOptions","fetch","then","res","status","json","catch","error","console","log"],"mappings":"AAAA,SAASA,UAAT,QAA2B,uBAA3B;AACA,SAASC,SAAT,QAA0B,UAA1B;AASA,OAAO,MAAMC,OAAO,GAAG,OAAO;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,GAAV;AAAeC,EAAAA,IAAf;AAAqBC,EAAAA;AAArB,CAAP,KAAwD;AAC7E,QAAMC,IAAI,GAAI,GAAEP,UAAU,CAACI,GAAI,GAAEA,GAAI,EAArC;AACA,MAAII,SAAS,GAAG,IAAIC,OAAJ,EAAhB;AACA,MAAIC,YAAY,GAAGT,SAAS,CAAC,cAAD,CAA5B;AACAO,EAAAA,SAAS,CAACG,MAAV,CAAiB,eAAjB,EAAkC,YAAYD,YAA9C;AAEA,QAAME,cAAc,GAAG;AACrBT,IAAAA,MAAM,EAAEA,MADa;AAErBG,IAAAA,OAAO,EAAEE,SAFY;AAGrBH,IAAAA,IAAI,EAAEA;AAHe,GAAvB;AAKA,SAAOQ,KAAK,CAACN,IAAD,EAAOK,cAAP,CAAL,CACJE,IADI,CACEC,GAAD,IAAS;AACb,QAAIA,GAAG,CAACC,MAAJ,KAAe,GAAf,IAAsBD,GAAG,CAACC,MAAJ,KAAe,GAAzC,EAA8C;AAC5C,aAAOD,GAAG,CAACE,IAAJ,EAAP;AACD,KAFD,MAEO;AACL,YAAMF,GAAN;AACD;AACF,GAPI,EAQJG,KARI,CAQGC,KAAD,IAAW;AAChB,QAAIA,KAAK,CAACH,MAAN,KAAiB,GAArB,EAA0B;AACxB,aAAO,KAAP;AACD,KAFD,MAEO,IAAIG,KAAK,CAACH,MAAN,KAAiB,GAArB,EAA0B;AAC/BI,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,aAAO,KAAP;AACD;;AACD,WAAO,KAAP;AACD,GAhBI,CAAP;AAiBD,CA5BM","sourcesContent":["import { apiBaseUrl } from \"../config/environment\";\nimport { getCookie } from \"./cookie\";\n\nexport interface apiCallProps {\n  method: string;\n  url: string;\n  body?: any;\n  headers?: any;\n}\n\nexport const apiCall = async ({ method, url, body, headers }: apiCallProps) => {\n  const url_ = `${apiBaseUrl.url}${url}`;\n  let myHeaders = new Headers();\n  let access_token = getCookie(\"access_token\");\n  myHeaders.append(\"Authorization\", \"Bearer \" + access_token);\n\n  const requestOptions = {\n    method: method,\n    headers: myHeaders,\n    body: body,\n  };\n  return fetch(url_, requestOptions)\n    .then((res) => {\n      if (res.status === 200 || res.status === 201) {\n        return res.json();\n      } else {\n        throw res;\n      }\n    })\n    .catch((error) => {\n      if (error.status === 404) {\n        return \"404\";\n      } else if (error.status === 401) {\n        console.log(error);\n        return \"401\";\n      }\n      return \"500\";\n    });\n};\n"]},"metadata":{},"sourceType":"module"}