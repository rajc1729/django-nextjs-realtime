{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/dasein/dev/explore_new/django-nextjs-realtime/frontend/components/buttons/button.tsx\";\nimport styles from \"../../styles/components/button.module.scss\";\n\nconst CustomButton = ({\n  children,\n  fill,\n  color,\n  clickAction,\n  disabled\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: fill ? color == \"red\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.fill_button,\n      style: !disabled ? {\n        backgroundColor: \"#F26358\"\n      } : {\n        backgroundColor: \"#F2635866\"\n      },\n      onClick: clickAction,\n      disabled: disabled,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.fill_button,\n      style: !disabled ? {\n        backgroundColor: \"#446BE5\"\n      } : {\n        backgroundColor: \"#446BE566\"\n      },\n      onClick: clickAction,\n      disabled: disabled,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.unfill_button,\n      onClick: clickAction,\n      disabled: disabled,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\nCustomButton.defaultProps = {\n  fill: true,\n  color: \"blue\",\n  disabled: false\n};\nexport default CustomButton;","map":{"version":3,"sources":["/home/dasein/dev/explore_new/django-nextjs-realtime/frontend/components/buttons/button.tsx"],"names":["styles","CustomButton","children","fill","color","clickAction","disabled","fill_button","backgroundColor","unfill_button","defaultProps"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,4CAAnB;;AAUA,MAAMC,YAA0C,GAAG,CAAC;AAClDC,EAAAA,QADkD;AAElDC,EAAAA,IAFkD;AAGlDC,EAAAA,KAHkD;AAIlDC,EAAAA,WAJkD;AAKlDC,EAAAA;AALkD,CAAD,KAM7C;AACJ,sBACE;AAAA,cACGH,IAAI,GACHC,KAAK,IAAI,KAAT,gBACE;AACE,MAAA,SAAS,EAAEJ,MAAM,CAACO,WADpB;AAEE,MAAA,KAAK,EACH,CAACD,QAAD,GACI;AAAEE,QAAAA,eAAe,EAAE;AAAnB,OADJ,GAEI;AAAEA,QAAAA,eAAe,EAAE;AAAnB,OALR;AAOE,MAAA,OAAO,EAAEH,WAPX;AAQE,MAAA,QAAQ,EAAEC,QARZ;AAAA,gBAUGJ;AAVH;AAAA;AAAA;AAAA;AAAA,YADF,gBAcE;AACE,MAAA,SAAS,EAAEF,MAAM,CAACO,WADpB;AAEE,MAAA,KAAK,EACH,CAACD,QAAD,GACI;AAAEE,QAAAA,eAAe,EAAE;AAAnB,OADJ,GAEI;AAAEA,QAAAA,eAAe,EAAE;AAAnB,OALR;AAOE,MAAA,OAAO,EAAEH,WAPX;AAQE,MAAA,QAAQ,EAAEC,QARZ;AAAA,gBAUGJ;AAVH;AAAA;AAAA;AAAA;AAAA,YAfC,gBA6BH;AACE,MAAA,SAAS,EAAEF,MAAM,CAACS,aADpB;AAEE,MAAA,OAAO,EAAEJ,WAFX;AAGE,MAAA,QAAQ,EAAEC,QAHZ;AAAA,gBAKGJ;AALH;AAAA;AAAA;AAAA;AAAA;AA9BJ,mBADF;AAyCD,CAhDD;;AAkDAD,YAAY,CAACS,YAAb,GAA4B;AAC1BP,EAAAA,IAAI,EAAE,IADoB;AAE1BC,EAAAA,KAAK,EAAE,MAFmB;AAG1BE,EAAAA,QAAQ,EAAE;AAHgB,CAA5B;AAMA,eAAeL,YAAf","sourcesContent":["import styles from \"../../styles/components/button.module.scss\";\n\nexport interface CustomButtonProps {\n  children?: React.ReactNode;\n  fill?: boolean;\n  color?: string;\n  clickAction: (event) => void;\n  disabled?: boolean;\n}\n\nconst CustomButton: React.SFC<CustomButtonProps> = ({\n  children,\n  fill,\n  color,\n  clickAction,\n  disabled\n}) => {\n  return (\n    <>\n      {fill ? (\n        color == \"red\" ? (\n          <button\n            className={styles.fill_button}\n            style={\n              !disabled\n                ? { backgroundColor: \"#F26358\" }\n                : { backgroundColor: \"#F2635866\" }\n            }\n            onClick={clickAction}\n            disabled={disabled}\n          >\n            {children}\n          </button>\n        ) : (\n          <button\n            className={styles.fill_button}\n            style={\n              !disabled\n                ? { backgroundColor: \"#446BE5\" }\n                : { backgroundColor: \"#446BE566\" }\n            }\n            onClick={clickAction}\n            disabled={disabled}\n          >\n            {children}\n          </button>\n        )\n      ) : (\n        <button\n          className={styles.unfill_button}\n          onClick={clickAction}\n          disabled={disabled}\n        >\n          {children}\n        </button>\n      )}\n    </>\n  );\n};\n\nCustomButton.defaultProps = {\n  fill: true,\n  color: \"blue\",\n  disabled: false\n};\n\nexport default CustomButton;\n"]},"metadata":{},"sourceType":"module"}