{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/dasein/dev/explore_new/django-nextjs-realtime/frontend/pages/sensor/[serial_no]/index.tsx\";\nimport { useRef, useState, useEffect } from \"react\";\nimport Header from \"../../components/header\";\nimport { apiCall } from \"../service/common\";\n\nconst Sensor = () => {\n  const {\n    0: data,\n    1: setData\n  } = useState(null);\n  const {\n    0: APIError,\n    1: setAPIError\n  } = useState(null);\n  const {\n    0: socketMessages,\n    1: setSocketMessages\n  } = useState(null);\n  const webSocket = useRef(null);\n\n  const getSocketToken = async () => {\n    const res = await apiCall({\n      method: \"POST\",\n      url: \"/sensor/user_socket_token/\"\n    });\n\n    if (res == \"404\" || res == \"401\" || res == \"500\") {\n      // if API doen't return 404 or 500 this will be rendered\n      switch (res) {\n        case \"404\":\n          setAPIError(404);\n          break;\n\n        case \"500\":\n          setAPIError(500);\n          break;\n\n        case \"401\":\n          setAPIError(401);\n          break;\n\n        default:\n          break;\n      }\n    } else {\n      setData(res);\n    }\n  };\n\n  useEffect(() => {\n    getSocketToken();\n  }, []);\n  useEffect(() => {\n    if (!data) {\n      return;\n    }\n\n    webSocket.current = new WebSocket(`ws://localhost:8000/liveHeartbeatV1?&token=${data.websocket_token}`);\n\n    webSocket.current.onmessage = message => {\n      const obj = JSON.parse(message.data);\n      setSocketMessages(obj);\n    };\n\n    return () => webSocket.current.close();\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        height: \"100%\",\n        marginTop: \"60px\"\n      },\n      children: socketMessages && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"socketMessages.data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport default Sensor;","map":{"version":3,"sources":["/home/dasein/dev/explore_new/django-nextjs-realtime/frontend/pages/sensor/[serial_no]/index.tsx"],"names":["useRef","useState","useEffect","Header","apiCall","Sensor","data","setData","APIError","setAPIError","socketMessages","setSocketMessages","webSocket","getSocketToken","res","method","url","current","WebSocket","websocket_token","onmessage","message","obj","JSON","parse","close","width","height","marginTop"],"mappings":";;;AACA,SAASA,MAAT,EAAiBC,QAAjB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,OAAT,QAAwB,mBAAxB;;AAEA,MAAMC,MAAqB,GAAG,MAAM;AAClC,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBN,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM;AAAA,OAACO,QAAD;AAAA,OAAWC;AAAX,MAA0BR,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM;AAAA,OAACS,cAAD;AAAA,OAAiBC;AAAjB,MAAsCV,QAAQ,CAAC,IAAD,CAApD;AACA,QAAMW,SAAS,GAAGZ,MAAM,CAAC,IAAD,CAAxB;;AAEA,QAAMa,cAAc,GAAG,YAAY;AACjC,UAAMC,GAAG,GAAG,MAAMV,OAAO,CAAC;AACxBW,MAAAA,MAAM,EAAE,MADgB;AAExBC,MAAAA,GAAG,EAAE;AAFmB,KAAD,CAAzB;;AAKA,QAAIF,GAAG,IAAI,KAAP,IAAgBA,GAAG,IAAI,KAAvB,IAAgCA,GAAG,IAAI,KAA3C,EAAkD;AAChD;AACA,cAAQA,GAAR;AACE,aAAK,KAAL;AACEL,UAAAA,WAAW,CAAC,GAAD,CAAX;AACA;;AAEF,aAAK,KAAL;AACEA,UAAAA,WAAW,CAAC,GAAD,CAAX;AACA;;AAEF,aAAK,KAAL;AACEA,UAAAA,WAAW,CAAC,GAAD,CAAX;AACA;;AAEF;AACE;AAdJ;AAgBD,KAlBD,MAkBO;AACLF,MAAAA,OAAO,CAACO,GAAD,CAAP;AACD;AACF,GA3BD;;AA6BAZ,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,cAAc;AACf,GAFQ,EAEN,EAFM,CAAT;AAIAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACI,IAAL,EAAW;AACT;AACD;;AACDM,IAAAA,SAAS,CAACK,OAAV,GAAoB,IAAIC,SAAJ,CACjB,8CAA6CZ,IAAI,CAACa,eAAgB,EADjD,CAApB;;AAGAP,IAAAA,SAAS,CAACK,OAAV,CAAkBG,SAAlB,GAA+BC,OAAD,IAAa;AACzC,YAAMC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWH,OAAO,CAACf,IAAnB,CAAZ;AACAK,MAAAA,iBAAiB,CAACW,GAAD,CAAjB;AACD,KAHD;;AAIA,WAAO,MAAMV,SAAS,CAACK,OAAV,CAAkBQ,KAAlB,EAAb;AACD,GAZQ,EAYN,CAACnB,IAAD,CAZM,CAAT;AAcA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,KAAK,EAAE;AAAEoB,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE,MAAzB;AAAiCC,QAAAA,SAAS,EAAE;AAA5C,OAAZ;AAAA,gBACGlB,cAAc,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADrB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAQD,CA7DD;;AA+DA,eAAeL,MAAf","sourcesContent":["import { useRouter } from \"next/router\";\nimport { useRef, useState, useEffect } from \"react\";\nimport Header from \"../../components/header\";\nimport { apiCall } from \"../service/common\";\n\nconst Sensor: React.SFC<{}> = () => {\n  const [data, setData] = useState(null);\n  const [APIError, setAPIError] = useState(null);\n  const [socketMessages, setSocketMessages] = useState(null);\n  const webSocket = useRef(null);\n\n  const getSocketToken = async () => {\n    const res = await apiCall({\n      method: \"POST\",\n      url: \"/sensor/user_socket_token/\",\n    });\n\n    if (res == \"404\" || res == \"401\" || res == \"500\") {\n      // if API doen't return 404 or 500 this will be rendered\n      switch (res) {\n        case \"404\":\n          setAPIError(404);\n          break;\n\n        case \"500\":\n          setAPIError(500);\n          break;\n\n        case \"401\":\n          setAPIError(401);\n          break;\n\n        default:\n          break;\n      }\n    } else {\n      setData(res);\n    }\n  };\n\n  useEffect(() => {\n    getSocketToken();\n  }, []);\n\n  useEffect(() => {\n    if (!data) {\n      return;\n    }\n    webSocket.current = new WebSocket(\n      `ws://localhost:8000/liveHeartbeatV1?&token=${data.websocket_token}`\n    );\n    webSocket.current.onmessage = (message) => {\n      const obj = JSON.parse(message.data);\n      setSocketMessages(obj);\n    };\n    return () => webSocket.current.close();\n  }, [data]);\n\n  return (\n    <>\n      <Header />\n      <div style={{ width: \"100%\", height: \"100%\", marginTop: \"60px\" }}>\n        {socketMessages && <h1>socketMessages.data</h1>}\n      </div>\n    </>\n  );\n};\n\nexport default Sensor;\n"]},"metadata":{},"sourceType":"module"}