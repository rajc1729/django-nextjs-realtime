{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/home/dasein/dev/explore_new/django-nextjs-realtime/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/dasein/dev/explore_new/django-nextjs-realtime/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/dasein/dev/explore_new/django-nextjs-realtime/frontend/pages/sensors.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useRouter } from \"next/router\";\nimport { useState, useEffect } from \"react\";\nimport Header from \"../components/header\";\nimport SensorCard from \"../components/SensorCard\";\nimport styles from \"../styles/sensors.module.scss\";\nimport { apiCall } from \"../service/common\";\nimport { getCookie } from \"../service/cookie\";\n\nvar Sensors = function Sensors() {\n  _s();\n\n  var router = useRouter();\n\n  var is_admin = function is_admin() {\n    var access_token = getCookie(\"access_token\");\n\n    if (!access_token) {\n      router.replace(\"/login\");\n    }\n  };\n\n  useEffect(function () {\n    is_admin();\n  }, []);\n\n  var _useState = useState([]),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var _useState2 = useState(null),\n      APIError = _useState2[0],\n      setAPIError = _useState2[1];\n\n  var getSensorDetils = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return apiCall({\n                method: \"GET\",\n                url: \"/sensor/\"\n              });\n\n            case 2:\n              res = _context.sent;\n\n              if (!(res == \"404\" || res == \"401\" || res == \"500\")) {\n                _context.next = 16;\n                break;\n              }\n\n              _context.t0 = res;\n              _context.next = _context.t0 === \"404\" ? 7 : _context.t0 === \"500\" ? 9 : _context.t0 === \"401\" ? 11 : 13;\n              break;\n\n            case 7:\n              setAPIError(404);\n              return _context.abrupt(\"break\", 14);\n\n            case 9:\n              setAPIError(500);\n              return _context.abrupt(\"break\", 14);\n\n            case 11:\n              setAPIError(401);\n              return _context.abrupt(\"break\", 14);\n\n            case 13:\n              return _context.abrupt(\"break\", 14);\n\n            case 14:\n              _context.next = 17;\n              break;\n\n            case 16:\n              setData(res);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getSensorDetils() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getSensorDetils();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        height: \"100%\",\n        marginTop: \"60px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.countries_grid,\n        children: [data === null || data === void 0 ? void 0 : data.map(function (sensor) {\n          return /*#__PURE__*/_jsxDEV(SensorCard, {\n            sensor: sensor\n          }, sensor.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 20\n          }, _this);\n        }), (data === null || data === void 0 ? void 0 : data.length) === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"no sensor found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Sensors, \"o2l1J4Ky5/QXCU4PKOSDKNmSUtc=\", false, function () {\n  return [useRouter];\n});\n\n_c = Sensors;\nexport default Sensors;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sensors\");","map":{"version":3,"sources":["/home/dasein/dev/explore_new/django-nextjs-realtime/frontend/pages/sensors.tsx"],"names":["useRouter","useState","useEffect","Header","SensorCard","styles","apiCall","getCookie","Sensors","router","is_admin","access_token","replace","data","setData","APIError","setAPIError","getSensorDetils","method","url","res","width","height","marginTop","countries_grid","map","sensor","id","length"],"mappings":"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","sourcesContent":["import { useRouter } from \"next/router\";\nimport { useRef, useState, useEffect } from \"react\";\nimport Header from \"../components/header\";\nimport SensorCard from \"../components/SensorCard\";\nimport styles from \"../styles/sensors.module.scss\";\nimport { apiCall } from \"../service/common\";\nimport { getCookie } from \"../service/cookie\";\n\nconst Sensors: React.SFC<{}> = () => {\n  const router = useRouter();\n  const is_admin = () => {\n    const access_token = getCookie(\"access_token\");\n\n    if (!access_token) {\n      router.replace(\"/login\");\n    }\n  };\n\n  useEffect(() => {\n    is_admin();\n  }, []);\n\n  const [data, setData] = useState([]);\n  const [APIError, setAPIError] = useState(null);\n\n  const getSensorDetils = async () => {\n    const res = await apiCall({\n      method: \"GET\",\n      url: \"/sensor/\",\n    });\n\n    if (res == \"404\" || res == \"401\" || res == \"500\") {\n      // if API doen't return 404 or 500 this will be rendered\n      switch (res) {\n        case \"404\":\n          setAPIError(404);\n          break;\n\n        case \"500\":\n          setAPIError(500);\n          break;\n\n        case \"401\":\n          setAPIError(401);\n          break;\n\n        default:\n          break;\n      }\n    } else {\n      setData(res);\n    }\n  };\n\n  useEffect(() => {\n    getSensorDetils();\n  }, []);\n\n  return (\n    <>\n      <Header />\n      <div style={{ width: \"100%\", height: \"100%\", marginTop: \"60px\" }}>\n        <div className={styles.countries_grid}>\n          {data?.map((sensor) => {\n            return <SensorCard key={sensor.id} sensor={sensor} />;\n          })}\n          {data?.length === 0 && (\n            <div>\n              <p>no sensor found</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Sensors;\n"]},"metadata":{},"sourceType":"module"}