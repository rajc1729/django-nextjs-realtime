{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"/home/dasein/dev/explore_new/django-nextjs-realtime/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/home/dasein/dev/explore_new/django-nextjs-realtime/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/dasein/dev/explore_new/django-nextjs-realtime/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/dasein/dev/explore_new/django-nextjs-realtime/frontend/pages/sensor/[serial_no]/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useRouter } from \"next/router\";\nimport { useRef, useState, useEffect } from \"react\";\nimport Header from \"../../../components/header\";\nimport { apiCall } from \"../../../service/common\";\n\nvar Sensor = function Sensor() {\n  _s();\n\n  var router = useRouter();\n  var serial_no = router.query.serial_no;\n\n  var _useState = useState(null),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var _useState2 = useState(null),\n      APIError = _useState2[0],\n      setAPIError = _useState2[1];\n\n  var _useState3 = useState([]),\n      socketMessages = _useState3[0],\n      setSocketMessages = _useState3[1];\n\n  var webSocket = useRef(null);\n\n  var getSocketToken = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(serial_no) {\n      var form_data, res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"------->\", serial_no);\n              form_data = new FormData();\n              form_data.append(\"serial_no\", serial_no);\n              form_data.append(\"serial_id\", \"123\");\n              _context.next = 6;\n              return apiCall({\n                method: \"POST\",\n                url: \"/sensor/user_socket_token/\",\n                body: form_data\n              });\n\n            case 6:\n              res = _context.sent;\n\n              if (!(res == \"404\" || res == \"401\" || res == \"500\")) {\n                _context.next = 20;\n                break;\n              }\n\n              _context.t0 = res;\n              _context.next = _context.t0 === \"404\" ? 11 : _context.t0 === \"500\" ? 13 : _context.t0 === \"401\" ? 15 : 17;\n              break;\n\n            case 11:\n              setAPIError(404);\n              return _context.abrupt(\"break\", 18);\n\n            case 13:\n              setAPIError(500);\n              return _context.abrupt(\"break\", 18);\n\n            case 15:\n              setAPIError(401);\n              return _context.abrupt(\"break\", 18);\n\n            case 17:\n              return _context.abrupt(\"break\", 18);\n\n            case 18:\n              _context.next = 21;\n              break;\n\n            case 20:\n              setData(res);\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getSocketToken(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    if (!serial_no) {\n      return;\n    } else {\n      console.log(serial_no);\n      getSocketToken(serial_no);\n    }\n  }, [router]);\n  useEffect(function () {\n    if (!data) {\n      return;\n    }\n\n    webSocket.current = new WebSocket(\"ws://localhost:8000/liveHeartbeatV1?&token=\".concat(data.websocket_token));\n\n    webSocket.current.onmessage = function (message) {\n      var obj = JSON.parse(message.data);\n      setSocketMessages([].concat(_toConsumableArray(socketMessages), [obj]));\n    };\n\n    return function () {\n      return webSocket.current.close();\n    };\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        height: \"100%\",\n        marginTop: \"60px\"\n      },\n      children: socketMessages && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"socketMessages.data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 28\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Sensor, \"UKNEc9ZFf01aLM2wMLj9YQz7DTs=\", false, function () {\n  return [useRouter];\n});\n\n_c = Sensor;\nexport default Sensor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sensor\");","map":{"version":3,"sources":["/home/dasein/dev/explore_new/django-nextjs-realtime/frontend/pages/sensor/[serial_no]/index.tsx"],"names":["useRouter","useRef","useState","useEffect","Header","apiCall","Sensor","router","serial_no","query","data","setData","APIError","setAPIError","socketMessages","setSocketMessages","webSocket","getSocketToken","console","log","form_data","FormData","append","method","url","body","res","current","WebSocket","websocket_token","onmessage","message","obj","JSON","parse","close","width","height","marginTop"],"mappings":"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","sourcesContent":["import { useRouter } from \"next/router\";\nimport { useRef, useState, useEffect } from \"react\";\nimport Header from \"../../../components/header\";\nimport { apiCall } from \"../../../service/common\";\n\nconst Sensor: React.SFC<{}> = () => {\n  const router = useRouter();\n  const { serial_no } = router.query;\n\n  const [data, setData] = useState(null);\n  const [APIError, setAPIError] = useState(null);\n  const [socketMessages, setSocketMessages] = useState([]);\n  const webSocket = useRef(null);\n\n  const getSocketToken = async (serial_no) => {\n    console.log(\"------->\", serial_no);\n    const form_data = new FormData();\n    form_data.append(\"serial_no\", serial_no);\n    form_data.append(\"serial_id\", \"123\");\n\n    const res = await apiCall({\n      method: \"POST\",\n      url: \"/sensor/user_socket_token/\",\n      body: form_data,\n    });\n\n    if (res == \"404\" || res == \"401\" || res == \"500\") {\n      // if API doen't return 404 or 500 this will be rendered\n      switch (res) {\n        case \"404\":\n          setAPIError(404);\n          break;\n\n        case \"500\":\n          setAPIError(500);\n          break;\n\n        case \"401\":\n          setAPIError(401);\n          break;\n\n        default:\n          break;\n      }\n    } else {\n      setData(res);\n    }\n  };\n\n  useEffect(() => {\n    if (!serial_no) {\n      return;\n    } else {\n      console.log(serial_no);\n      getSocketToken(serial_no);\n    }\n  }, [router]);\n\n  useEffect(() => {\n    if (!data) {\n      return;\n    }\n    webSocket.current = new WebSocket(\n      `ws://localhost:8000/liveHeartbeatV1?&token=${data.websocket_token}`\n    );\n    webSocket.current.onmessage = (message) => {\n      const obj = JSON.parse(message.data);\n      setSocketMessages([...socketMessages, obj]);\n    };\n    return () => webSocket.current.close();\n  }, [data]);\n\n  return (\n    <>\n      <Header />\n      <div style={{ width: \"100%\", height: \"100%\", marginTop: \"60px\" }}>\n        {socketMessages && <h1>socketMessages.data</h1>}\n      </div>\n    </>\n  );\n};\n\nexport default Sensor;\n"]},"metadata":{},"sourceType":"module"}