{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/dasein/dev/explore_new/django-nextjs-realtime/frontend/pages/sensors.tsx\";\nimport { useState, useEffect } from \"react\";\nimport Header from \"../components/header\";\nimport SensorCard from \"../components/SensorCard\";\nimport styles from \"../styles/sensors.module.scss\";\nimport { apiCall } from \"../service/common\";\n\nconst Sensors = () => {\n  const {\n    0: data,\n    1: setData\n  } = useState([]);\n  const {\n    0: APIError,\n    1: setAPIError\n  } = useState(null);\n\n  const getSensorDetils = async () => {\n    const res = await apiCall({\n      method: \"GET\",\n      url: \"/sensor/\"\n    });\n\n    if (res == \"404\" || res == \"401\" || res == \"500\") {\n      // if API doen't return 404 or 500 this will be rendered\n      switch (res) {\n        case \"404\":\n          setAPIError(404);\n          break;\n\n        case \"500\":\n          setAPIError(500);\n          break;\n\n        case \"401\":\n          setAPIError(401);\n          break;\n\n        default:\n          break;\n      }\n    } else {\n      setData(res);\n    }\n  };\n\n  useEffect(() => {\n    getSensorDetils();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        height: \"100%\",\n        marginTop: \"60px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.countries_grid,\n        children: [data === null || data === void 0 ? void 0 : data.map(country => {\n          return /*#__PURE__*/_jsxDEV(SensorCard, {\n            country: country\n          }, country._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 20\n          }, this);\n        }), (data === null || data === void 0 ? void 0 : data.length) === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"no country found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport default Sensors;","map":{"version":3,"sources":["/home/dasein/dev/explore_new/django-nextjs-realtime/frontend/pages/sensors.tsx"],"names":["useState","useEffect","Header","SensorCard","styles","apiCall","Sensors","data","setData","APIError","setAPIError","getSensorDetils","res","method","url","width","height","marginTop","countries_grid","map","country","_id","length"],"mappings":";;;AACA,SAAiBA,QAAjB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AAEA,SAASC,OAAT,QAAwB,mBAAxB;;AAEA,MAAMC,OAAsB,GAAG,MAAM;AACnC,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAA,OAACS,QAAD;AAAA,OAAWC;AAAX,MAA0BV,QAAQ,CAAC,IAAD,CAAxC;;AAEA,QAAMW,eAAe,GAAG,YAAY;AAClC,UAAMC,GAAG,GAAG,MAAMP,OAAO,CAAC;AACxBQ,MAAAA,MAAM,EAAE,KADgB;AAExBC,MAAAA,GAAG,EAAE;AAFmB,KAAD,CAAzB;;AAKA,QAAIF,GAAG,IAAI,KAAP,IAAgBA,GAAG,IAAI,KAAvB,IAAgCA,GAAG,IAAI,KAA3C,EAAkD;AAChD;AACA,cAAQA,GAAR;AACE,aAAK,KAAL;AACEF,UAAAA,WAAW,CAAC,GAAD,CAAX;AACA;;AAEF,aAAK,KAAL;AACEA,UAAAA,WAAW,CAAC,GAAD,CAAX;AACA;;AAEF,aAAK,KAAL;AACEA,UAAAA,WAAW,CAAC,GAAD,CAAX;AACA;;AAEF;AACE;AAdJ;AAgBD,KAlBD,MAkBO;AACLF,MAAAA,OAAO,CAACI,GAAD,CAAP;AACD;AACF,GA3BD;;AA6BAX,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,eAAe;AAChB,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,KAAK,EAAE;AAAEI,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE,MAAzB;AAAiCC,QAAAA,SAAS,EAAE;AAA5C,OAAZ;AAAA,6BACE;AAAK,QAAA,SAAS,EAAEb,MAAM,CAACc,cAAvB;AAAA,mBACGX,IADH,aACGA,IADH,uBACGA,IAAI,CAAEY,GAAN,CAAWC,OAAD,IAAa;AACtB,8BAAO,QAAC,UAAD;AAA8B,YAAA,OAAO,EAAEA;AAAvC,aAAiBA,OAAO,CAACC,GAAzB;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAFA,CADH,EAIG,CAAAd,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEe,MAAN,MAAiB,CAAjB,iBACC;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAiBD,CAtDD;;AAwDA,eAAehB,OAAf","sourcesContent":["import { useRouter } from \"next/router\";\nimport { useRef, useState, useEffect } from \"react\";\nimport Header from \"../components/header\";\nimport SensorCard from \"../components/SensorCard\";\nimport styles from \"../styles/sensors.module.scss\";\n\nimport { apiCall } from \"../service/common\";\n\nconst Sensors: React.SFC<{}> = () => {\n  const [data, setData] = useState([]);\n  const [APIError, setAPIError] = useState(null);\n\n  const getSensorDetils = async () => {\n    const res = await apiCall({\n      method: \"GET\",\n      url: \"/sensor/\",\n    });\n\n    if (res == \"404\" || res == \"401\" || res == \"500\") {\n      // if API doen't return 404 or 500 this will be rendered\n      switch (res) {\n        case \"404\":\n          setAPIError(404);\n          break;\n\n        case \"500\":\n          setAPIError(500);\n          break;\n\n        case \"401\":\n          setAPIError(401);\n          break;\n\n        default:\n          break;\n      }\n    } else {\n      setData(res);\n    }\n  };\n\n  useEffect(() => {\n    getSensorDetils();\n  }, []);\n\n  return (\n    <>\n      <Header />\n      <div style={{ width: \"100%\", height: \"100%\", marginTop: \"60px\" }}>\n        <div className={styles.countries_grid}>\n          {data?.map((country) => {\n            return <SensorCard key={country._id} country={country} />;\n          })}\n          {data?.length === 0 && (\n            <div>\n              <p>no country found</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Sensors;\n"]},"metadata":{},"sourceType":"module"}